spring.application.name=PickMyCardClientCardApplication
# Server settings
server.port=8015

# Eureka client settings
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}

# Management endpoints exposure
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true

# Resilience4j CircuitBreaker ??
resilience4j.circuitbreaker.instances.cardCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.cardCircuitBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.cardCircuitBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.cardCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.cardCircuitBreaker.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.cardCircuitBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.cardCircuitBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.cardCircuitBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cardCircuitBreaker.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.cardCircuitBreaker.slow-call-duration-threshold=2000
